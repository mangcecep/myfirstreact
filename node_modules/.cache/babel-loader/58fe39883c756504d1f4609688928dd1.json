{"ast":null,"code":"var _jsxFileName = \"/Users/gmv/Documents/myfirstreact/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; // import App from './App';\n// import * as serviceWorker from './serviceWorker';\n// const mysFirstElemennt = <h1>Hello React!</h1>\n// const myelement = (\n//     <table>\n//         <tr>\n//             <th>Name</th>\n//         </tr>\n//         <tr>\n//             <td>John</td>\n//         </tr>\n//         <tr>\n//             <td>Elsa</td>\n//         </tr>\n//     </table>\n// );\n// //use JSX\n// const myelement = <h1>I love JSX!</h1>\n//use non-JSX\n// const myelement = React.createElement('h1', {}, 'I dont use JSX!');\n// expression in JSX\n// const myelement = <h1>React is {5 + 5} times better with JSX</h1>\n// insert a large block HTML\n// const myelement = (\n//     <ul>\n//         <li>Apples</li>\n//         <li>Bananas</li>\n//         <li>Cherries</li>\n//     </ul>\n// );\n//one Top Level Element\n// const myelement = (\n//     <div>\n//         <h1>I am a Header.</h1>\n//         <h1>I am a Header too.</h1>\n//     </div>\n// );\n// element Must be CLose -> close empty element with /> if not that is error \n// i.e :\n//const myelement = <input type=\"text\">\n//it's mus be like this: \n// const myelement = <input type=\"text\"/>\n// function Car(){\n//     return <h2>Hi, I am also a Car!</h2>\n// }\n// class Car extends React.Component{\n//     constructor(){\n//         super();\n//         this.state = {color: \"red\"};\n//     }\n//     render(){\n//     return <h2>I am a {this.state.color} Car!</h2>\n//     }\n// }\n// class Car extends React.Component{\n//     render() {\n//         return <h2>I am a {this.props.color} Car!</h2>\n//     }\n// }\n// class Car extends React.Component{\n//     render() {\n//         return <h2>I am a Car!</h2>\n//     }\n// }\n// class Garage extends React.Component {\n//     render(){\n//         return (\n//             <div>\n//                 <h1>Who lives in my Garage?</h1>\n//                 <Car />\n//             </div>\n//         );\n//     }\n// }\n\nclass Car extends React.Component {\n  render() {\n    return React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"I am a \", this.props.brand, \"!\");\n  }\n\n}\n\nconst myelement = React.createElement(Car, {\n  brand: \"Ford\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 101\n  },\n  __self: this\n});\n\nclass Card extends React.Component {\n  render() {\n    return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"ini Card\");\n  }\n\n}\n\nReactDOM.render(React.createElement(Card, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 110\n  },\n  __self: this\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();","map":{"version":3,"sources":["/Users/gmv/Documents/myfirstreact/src/index.js"],"names":["React","ReactDOM","Car","Component","render","props","brand","myelement","Card","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP,C,CACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAiC;AAC7BC,EAAAA,MAAM,GAAE;AACJ,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAY,KAAKC,KAAL,CAAWC,KAAvB,MAAP;AACH;;AAH4B;;AAMjC,MAAMC,SAAS,GAAG,oBAAC,GAAD;AAAK,EAAA,KAAK,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAlB;;AAEA,MAAMC,IAAN,SAAmBR,KAAK,CAACG,SAAzB,CAAkC;AAC9BC,EAAAA,MAAM,GAAE;AACJ,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH;;AAH6B;;AAOlCH,QAAQ,CAACG,MAAT,CAAgB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAA0BK,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA1B,E,CAEA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\n// import * as serviceWorker from './serviceWorker';\n\n// const mysFirstElemennt = <h1>Hello React!</h1>\n// const myelement = (\n//     <table>\n//         <tr>\n//             <th>Name</th>\n//         </tr>\n//         <tr>\n//             <td>John</td>\n//         </tr>\n//         <tr>\n//             <td>Elsa</td>\n//         </tr>\n//     </table>\n// );\n\n// //use JSX\n\n// const myelement = <h1>I love JSX!</h1>\n\n//use non-JSX\n\n// const myelement = React.createElement('h1', {}, 'I dont use JSX!');\n// expression in JSX\n// const myelement = <h1>React is {5 + 5} times better with JSX</h1>\n\n// insert a large block HTML\n// const myelement = (\n//     <ul>\n//         <li>Apples</li>\n//         <li>Bananas</li>\n//         <li>Cherries</li>\n//     </ul>\n// );\n\n//one Top Level Element\n// const myelement = (\n//     <div>\n//         <h1>I am a Header.</h1>\n//         <h1>I am a Header too.</h1>\n//     </div>\n// );\n\n// element Must be CLose -> close empty element with /> if not that is error \n// i.e :\n\n//const myelement = <input type=\"text\">\n\n//it's mus be like this: \n// const myelement = <input type=\"text\"/>\n\n// function Car(){\n//     return <h2>Hi, I am also a Car!</h2>\n// }\n\n// class Car extends React.Component{\n//     constructor(){\n//         super();\n//         this.state = {color: \"red\"};\n//     }\n\n//     render(){\n//     return <h2>I am a {this.state.color} Car!</h2>\n//     }\n// }\n\n// class Car extends React.Component{\n//     render() {\n//         return <h2>I am a {this.props.color} Car!</h2>\n//     }\n// }\n\n// class Car extends React.Component{\n//     render() {\n//         return <h2>I am a Car!</h2>\n//     }\n// }\n\n// class Garage extends React.Component {\n//     render(){\n//         return (\n//             <div>\n//                 <h1>Who lives in my Garage?</h1>\n//                 <Car />\n//             </div>\n//         );\n//     }\n// }\n\nclass Car extends React.Component{\n    render(){\n        return <h2>I am a {this.props.brand}!</h2>\n    }\n}\n\nconst myelement = <Car brand=\"Ford\" />\n\nclass Card extends React.Component{\n    render(){\n        return <h1>ini Card</h1>\n    }\n}\n\n\nReactDOM.render(<Card />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}